{
  "params": [
    {
      "name": "SplitMarkers",
      "value": true
    },
    {
      "name": "ConcernColour",
      "value": "#FE9E00"
    },
    {
      "name": "ImprovementColour",
      "value": "#2869B2"
    },
    {
      "name": "CommonCauseColour",
      "value": "#CCCCCC"
    },
    {
      "name": "MeanGroupSizeThreshold",
      "value": 7
    },
    {
      "name": "TrendGroupSizeThreshold",
      "value": 7
    },
    {
      "name": "DefaultTargetDirection",
      "value": "High"
    },
    {
      "name": "ChartTitle",
      "value": "Enter chart title here"
    }
  ],
  "data": {"name": "dataset"},
  "transform": [
    {
      "calculate": "'Mean'",
      "as": "Mean Legend"
    },
    {
      "calculate": "'Target'",
      "as": "Target Legend"
    },
    {
      "calculate": "'Result'",
      "as": "Result Legend"
    },
    {
      "calculate": "if(isValid(datum.TargetDirection), datum.TargetDirection, DefaultTargetDirection)",
      "as": "ImprovementDirection"
    },
    {
      "joinaggregate": [
        {
          "op": "mean",
          "field": "Result",
          "as": "Mean"
        }
      ]
    },
    {
      "window": [
        {
          "op": "lag",
          "field": "Result",
          "as": "Prior1Row"
        }
      ]
    },
    {
      "window": [
        {
          "op": "lead",
          "field": "Result",
          "as": "Following1Row"
        }
      ]
    },
    {
      "calculate": "if(isValid(datum.Prior1Row) && isValid(datum.Result), abs(datum.Result - datum.Prior1Row), null)",
      "as": "MovingAverage"
    },
    {
      "joinaggregate": [
        {
          "op": "mean",
          "field": "MovingAverage",
          "as": "MovingRangeAverage"
        }
      ]
    },
    {
      "calculate": "if((datum.Result < datum.Mean && datum.Prior1Row < datum.Mean) || (datum.Result > datum.Mean && datum.Prior1Row > datum.Mean) || (datum.Result == datum.Mean && datum.Prior1Row == datum.Mean), 0, 1)",
      "as": "MeanGroupStart"
    },
    {
      "window": [
        {
          "op": "sum",
          "field": "MeanGroupStart",
          "as": "MeanGroup"
        }
      ]
    },
    {
      "window": [
        {
          "op": "count",
          "field": "MeanGroup",
          "as": "MeanScore"
        }
      ],
      "frame": [null, null],
      "groupby": ["MeanGroup"]
    },
    {
      "calculate": "datum.Mean - (2.66 * datum.MovingRangeAverage)",
      "as": "LCL"
    },
    {
      "calculate": "datum.Mean + (2.66 * datum.MovingRangeAverage)",
      "as": "UCL"
    },
    {
      "calculate": "if(datum.Result > datum.UCL, 1, 0)",
      "as": "OutsideUCL"
    },
    {
      "calculate": "if(datum.Result < datum.LCL, 1, 0)",
      "as": "OutsideLCL"
    },
    {
      "calculate": "if((datum.Result > (datum.Mean + (datum.MovingRangeAverage * 1.77))) && (datum.Result <= (datum.Mean + (datum.MovingRangeAverage * 2.66))), 1, 0)",
      "as": "NearUCL"
    },
    {
      "window": [
        {
          "op": "sum",
          "field": "NearUCL",
          "as": "NearUCLScore"
        }
      ],
      "frame": [-2, 2]
    },
    {
      "calculate": "if(datum.NearUCL > 0 && datum.NearUCLScore > 1, 1, 0)",
      "as": "UCLTwoOfThreeBeyondTwoSigma"
    },
    {
      "calculate": "if((datum.Result < (datum.Mean - (datum.MovingRangeAverage * 1.77))) && (datum.Result >= (datum.Mean - (datum.MovingRangeAverage * 2.66))), 1, 0)",
      "as": "NearLCL"
    },
    {
      "window": [
        {
          "op": "sum",
          "field": "NearLCL",
          "as": "NearLCLScore"
        }
      ],
      "frame": [-2, 2]
    },
    {
      "calculate": "if(datum.NearLCL > 0 && datum.NearLCLScore > 1, 1, 0)",
      "as": "LCLTwoOfThreeBeyondTwoSigma"
    },
    {
      "calculate": "if(datum.Result >= datum.Prior1Row && isValid(datum.Prior1Row), 1, if(datum.Result <= datum.Following1Row && isValid(datum.Following1Row), 1, 0))",
      "as": "TrendUp"
    },
    {
      "calculate": "if(datum.Result >= datum.Prior1Row && isValid(datum.Prior1Row), 0, 1)",
      "as": "TrendUpGroupStart"
    },
    {
      "window": [
        {
          "op": "sum",
          "field": "TrendUpGroupStart",
          "as": "TrendUpGroup"
        }
      ]
    },
    {
      "window": [
        {
          "op": "count",
          "field": "TrendUpGroup",
          "as": "TrendUpScore"
        }
      ],
      "frame": [null, null],
      "groupby": ["TrendUpGroup"]
    },
    {
      "calculate": "if(datum.TrendUpScore >= TrendGroupSizeThreshold && datum.TrendUp == 1, 1, 0)",
      "as": "TrendUpThreshold"
    },
    {
      "calculate": "if(datum.Result <= datum.Prior1Row && isValid(datum.Prior1Row), 1, if(datum.Result >= datum.Following1Row && isValid(datum.Following1Row), 1, 0))",
      "as": "TrendDown"
    },
    {
      "calculate": "if(datum.Result <= datum.Prior1Row && isValid(datum.Prior1Row), 0, 1)",
      "as": "TrendDownGroupStart"
    },
    {
      "window": [
        {
          "op": "sum",
          "field": "TrendDownGroupStart",
          "as": "TrendDownGroup"
        }
      ]
    },
    {
      "window": [
        {
          "op": "count",
          "field": "TrendDownGroup",
          "as": "TrendDownScore"
        }
      ],
      "frame": [null, null],
      "groupby": ["TrendDownGroup"]
    },
    {
      "calculate": "if(datum.TrendDownScore >= TrendGroupSizeThreshold && datum.TrendDown == 1, 1, 0)",
      "as": "TrendDownThreshold"
    },
    {
      "calculate": "if(datum.Result == datum.Prior1Row && isValid(datum.Prior1Row), 1, 0)",
      "as": "TrendEqual"
    },
    {
      "calculate": "if((datum.ImprovementDirection == 'High' && (datum.OutsideUCL == 1 || datum.UCLTwoOfThreeBeyondTwoSigma == 1 || (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result > datum.Mean) || datum.TrendUpThreshold == 1)) || (datum.ImprovementDirection == 'Low' && (datum.OutsideLCL == 1 || datum.LCLTwoOfThreeBeyondTwoSigma == 1 || (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result < datum.Mean) || datum.TrendDownThreshold == 1)), 1, 0)",
      "as": "IsImprovement"
    },
    {
      "calculate": "if((datum.ImprovementDirection == 'Low' && (datum.OutsideUCL == 1 || datum.UCLTwoOfThreeBeyondTwoSigma == 1 || (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result > datum.Mean) || datum.TrendUpThreshold == 1)) || (datum.ImprovementDirection == 'High' && (datum.OutsideLCL == 1 || datum.LCLTwoOfThreeBeyondTwoSigma == 1 || (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result < datum.Mean) || datum.TrendDownThreshold == 1)), 1, 0)",
      "as": "IsConcern"
    },
    {
      "calculate": "if(datum.IsImprovement == 0 && datum.IsConcern == 0, 1, 0)",
      "as": "IsCommonCause"
    },
    {
      "calculate": "if(datum.IsImprovement == 1, 'Improvement', if(datum.IsConcern == 1, 'Concern', 'Common Cause'))",
      "as": "PrimarySPCCategory"
    },
    {
      "calculate": "if(datum.IsImprovement == 1 && datum.IsConcern == 1 && SplitMarkers == true, 'Concern', datum.PrimarySPCCategory)",
      "as": "SecondarySPCCategory"
    },
    {
      "calculate": "if(datum.ImprovementDirection == 'High' && datum.OutsideUCL == 1, ' It is an astronomical point.', '') + if(datum.ImprovementDirection == 'Low' && datum.OutsideLCL, ' It is an astronomical point.', '') + if(datum.ImprovementDirection == 'High' && datum.UCLTwoOfThreeBeyondTwoSigma == 1, ' It is in a group close to the two sigma boundary.', '') + if(datum.ImprovementDirection == 'Low' && datum.LCLTwoOfThreeBeyondTwoSigma, ' It is in a group close to the two sigma boundary.', '') + if(datum.ImprovementDirection == 'High' && datum.TrendUpThreshold == 1, ' It is part of a group of points trending up.', '') + if(datum.ImprovementDirection == 'Low' && datum.TrendDownThreshold, ' It is part of a group of points trending down.', '') + if(datum.ImprovementDirection == 'High' && (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result > datum.Mean), ' It is part of a run above the mean.', '')",
      "as": "ImprovementComments"
    },
    {
      "calculate": "if(datum.ImprovementDirection == 'Low' && datum.OutsideUCL == 1, ' It is an astronomical point.', '') + if(datum.ImprovementDirection == 'High' && datum.OutsideLCL, ' It is an astronomical point.', '') + if(datum.ImprovementDirection == 'Low' && datum.UCLTwoOfThreeBeyondTwoSigma == 1, ' It is in a group close to the two sigma boundary.', '') + if(datum.ImprovementDirection == 'High' && datum.LCLTwoOfThreeBeyondTwoSigma, ' It is in a group close to the two sigma boundary.', '') + if(datum.ImprovementDirection == 'Low' && datum.TrendUpThreshold == 1, ' It is part of a group of points trending up.', '') + if(datum.ImprovementDirection == 'High' && datum.TrendDownThreshold, ' It is part of a group of points trending down.', '') + if(datum.ImprovementDirection == 'Low' && (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result > datum.Mean), ' It is part of a run above the mean.', '') + if(datum.ImprovementDirection == 'High' && (datum.MeanScore >= MeanGroupSizeThreshold && datum.Result < datum.Mean), ' It is part of a run below the mean.', '')",
      "as": "ConcernComments"
    },
    {
      "calculate": "if(datum.PrimarySPCCategory != datum.SecondarySPCCategory, 'This datapoint is part of both improvement and concern groups. ' + datum.ImprovementComments + ' ' + datum.ConcernComments, if(datum.PrimarySPCCategory == 'Improvement', 'This data point shows improvement. ' + datum.ImprovementComments, if(datum.PrimarySPCCategory == 'Concern', 'Datapoint is of concern. ' + datum.ConcernComments, 'Datapoint is of common cause.')))",
      "as": "SPCCategoryTooltip"
    }
  ],
  "title": {
    "text": {"expr": "ChartTitle"},
    "offset": 10
  },
  "layer": [
    {
      "mark": {
        "type": "line",
        "strokeWidth": 2,
        "opacity": 0.4,
        "color": "gray"
      },
      "encoding": {
        "color": {
          "field": "Mean Legend",
          "type": "nominal",
          "scale": {
            "domain": ["Mean"],
            "range": ["gray"]
          },
          "legend": {
            "title": null,
            "symbolType": "stroke"
          }
        },
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "Mean",
          "type": "quantitative"
        }
      }
    },
    {
      "mark": {
        "type": "line",
        "strokeWidth": 2,
        "strokeDash": [1, 5],
        "color": "green"
      },
      "encoding": {
        "color": {
          "field": "Target Legend",
          "type": "nominal",
          "scale": {
            "domain": ["Target"],
            "range": ["green"]
          },
          "legend": {"title": null}
        },
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "Target",
          "type": "quantitative"
        }
      }
    },
    {
      "mark": {
        "type": "line",
        "strokeWidth": 2,
        "strokeDash": [5, 6],
        "opacity": 0.4
      },
      "encoding": {
        "color": {"value": "gray"},
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "LCL",
          "type": "quantitative"
        }
      }
    },
    {
      "mark": {
        "type": "line",
        "strokeWidth": 2,
        "strokeDash": [5, 6],
        "opacity": 0.4
      },
      "encoding": {
        "color": {"value": "gray"},
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "UCL",
          "type": "quantitative"
        }
      }
    },
    {
      "mark": {
        "type": "line",
        "strokeWidth": 2,
        "color": "black"
      },
      "encoding": {
        "color": {
          "field": "Result Legend",
          "type": "nominal",
          "scale": {
            "domain": ["Result"],
            "range": ["black"]
          },
          "legend": {"title": null}
        },
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "Result",
          "type": "quantitative"
        }
      }
    },
    {
      "mark": {
        "type": "circle",
        "opacity": 1
      },
      "encoding": {
        "color": {
          "field": "PrimarySPCCategory",
          "type": "nominal",
          "scale": {
            "domain": [
              "Improvement",
              "Concern",
              "Common Cause"
            ],
            "range": [
              {"expr": "ImprovementColour"},
              {"expr": "ConcernColour"},
              {"expr": "CommonCauseColour"}
            ]
          },
          "legend": {"title": null}
        },
        "size": {"value": 100},
        "x": {
          "field": "Date",
          "type": "temporal",
          "axis": {
            "format": "dd/MM/yy",
            "formatType": "pbiFormat"
          }
        },
        "y": {
          "field": "Result",
          "type": "quantitative"
        },
        "tooltip": [
          {
            "field": "Result",
            "type": "quantitative",
            "format": ",.2f",
            "title": "Result"
          },
          {
            "field": "Date",
            "type": "temporal",
            "title": "Date"
          },
          {
            "field": "Mean",
            "type": "quantitative",
            "format": ".2f",
            "title": "Mean"
          },
          {
            "field": "UCL",
            "type": "quantitative",
            "format": ".2f",
            "title": "UCL"
          },
          {
            "field": "LCL",
            "type": "quantitative",
            "format": ".2f",
            "title": "LCL"
          },
          {
            "field": "ImprovementDirection",
            "type": "nominal",
            "title": "Improvement Direction"
          },
          {
            "field": "SPCCategoryTooltip",
            "type": "nominal",
            "title": "SPC Category"
          }
        ]
      }
    },
    {
      "mark": {
        "type": "arc",
        "theta": {"expr": "PI"},
        "innerRadius": 0,
        "outerRadius": 5.2
      },
      "encoding": {
        "color": {
          "condition": [
            {
              "test": "datum.SecondarySPCCategory === 'Improvement'",
              "value": {
                "expr": "ImprovementColour"
              }
            },
            {
              "test": "datum.SecondarySPCCategory === 'Concern'",
              "value": {
                "expr": "ConcernColour"
              }
            }
          ],
          "value": {
            "expr": "CommonCauseColour"
          }
        },
        "x": {
          "field": "Date",
          "type": "temporal"
        },
        "y": {
          "field": "Result",
          "type": "quantitative"
        }
      }
    }
  ],
  "resolve": {
    "legend": {"color": "independent"},
    "scale": {"color": "independent"}
  },
  "encoding": {
    "x": {
      "axis": {
        "title": null,
        "labelAngle": -30,
        "labelOverlap": false,
        "labelPadding": 5
      }
    },
    "y": {
      "axis": {"title": null},
      "scale": {"zero": true}
    }
  }
}
